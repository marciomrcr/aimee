// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Role {
  id   String @id @default(cuid())
  name String
  User User[]
}

model User {
  id        String   @id @default(cuid())
  roleId    String
  name      String
  email     String?  @unique
  avatarUrl String?
  createdAt DateTime @default(now())
  role      Role     @relation(fields: [roleId], references: [id])
}

model Consumer {
  id          String   @id @default(cuid())
  name        String
  phone       String
  whatsapp    String?
  instagram   String?
  facebook    String?
  address     String?
  city        String?
  state       String?
  observation String?
  zipcode     String?
  createdAt   DateTime @default(now())
  Sale        Sale[]
}

model Supplier {
  id                String              @id @default(cuid())
  cnpj              String
  ie                String?             @unique
  name              String              @unique
  phone             String              @unique
  whatsapp          String?             @unique
  email             String              @unique
  instagram         String?             @unique
  facebook          String?             @unique
  address           String?
  city              String?
  state             String?
  zipcode           String?
  createdAt         DateTime            @default(now())
  purcahase_Product Purcahase_Product[]
}

model Category {
  id               String             @id @default(cuid())
  name             String             @unique
  category_product Category_Product[]
}

model Category_Product {
  id String @id @default(cuid())

  productId  String
  categoryId String

  product  Product  @relation(fields: [productId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])
}

model Product {
  id                String              @id @default(cuid())
  code              String              @unique
  categoryId        String
  name              String              @unique
  description       String
  size              String?
  colors            String?
  min_stock         Int
  purchasePrice     Int
  salePrice         Int
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  Stock             Stock[]
  stock_movement    stock_Movement[]
  sale_product      Sale_Product[]
  category_product  Category_Product[]
  Purcahase_Product Purcahase_Product[]
}

model Stock {
  id        String @id @default(cuid())
  code      String @unique
  amount    Int
  productId String
  min_stock Int?

  product Product @relation(fields: [productId], references: [id])
}

model stock_Movement {
  id          String    @id @default(cuid())
  code        String    @unique
  productId   String
  amount      Int       @default(1)
  entry_date  DateTime  @default(now())
  output_date DateTime?

  product Product @relation(fields: [productId], references: [id])
}

model Sale {
  id          String   @id @default(cuid())
  code        String   @unique
  consumerId  String
  sum_total   Int
  count_itens Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  sale_product Sale_Product[]

  consumer Consumer @relation(fields: [consumerId], references: [id])
}

model Sale_Product {
  id            String @id @default(cuid())
  saleId        String
  productId     String
  amountProduct Int
  priceSale     Int
  subtotal      Int

  sale    Sale    @relation(fields: [saleId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  consumerId String?
}

model Purchase {
  id          String   @id @default(cuid())
  sum_total   Int
  count_itens Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Purcahase_Product Purcahase_Product[]
}

model Purcahase_Product {
  providerId String
  purchaseId String
  productId  String
  amount     Int
  price      Int
  subtotal   Int

  supplier Supplier @relation(fields: [providerId], references: [id])
  purchase Purchase @relation(fields: [purchaseId], references: [id])
  product  Product  @relation(fields: [productId], references: [id])

  @@id([purchaseId, providerId])
}

model Income {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Expense {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Post {
  id         Int                 @id @default(autoincrement())
  title      String
  categorias CategoriasOnPosts[]
}

model categoria {
  id    Int                 @id @default(autoincrement())
  name  String
  posts CategoriasOnPosts[]
}

model CategoriasOnPosts {
  post        Post      @relation(fields: [postId], references: [id])
  postId      Int
  category    categoria @relation(fields: [categoriaId], references: [id])
  categoriaId Int
  assignedAt  DateTime  @default(now())
  assignedBy  String

  @@id([postId, categoriaId])
}
